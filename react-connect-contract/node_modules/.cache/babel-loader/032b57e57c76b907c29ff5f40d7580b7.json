{"ast":null,"code":"import Web3 from 'web3';\nconst rpcURL = \"https://ropsten.infura.io/v3/cf658270146645bca881f8a7d4752099\"; // Your RCP URL goes here\n\nlet web3;\nwindow.addEventListener('load', async () => {\n  const metaMaskEthProvider = window.ethereum;\n\n  if (metaMaskEthProvider) {\n    let instance = new Web3(metaMaskEthProvider);\n\n    try {\n      await metaMaskEthProvider.enable();\n      web3 = instance;\n    } catch (error) {\n      alert('Allow access for the app to work');\n    }\n  } else {\n    console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n    web3 = new Web3(rpcURL);\n  }\n});\nconsole.log(web3);\nconst address = '0x22b6acd52a80540260376236d904e20b5b889246';\nconst abi = [{\n  \"constant\": false,\n  \"inputs\": [{\n    \"name\": \"x\",\n    \"type\": \"string\"\n  }],\n  \"name\": \"sendHash\",\n  \"outputs\": [],\n  \"payable\": false,\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"constant\": true,\n  \"inputs\": [],\n  \"name\": \"getHash\",\n  \"outputs\": [{\n    \"name\": \"x\",\n    \"type\": \"string\"\n  }],\n  \"payable\": false,\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}];\nexport default new web3.eth.Contract(abi, address); // export default currentWeb3;","map":{"version":3,"sources":["/home/kai/train blockchain/ipfs/src/web3.js"],"names":["Web3","rpcURL","web3","window","addEventListener","metaMaskEthProvider","ethereum","instance","enable","error","alert","console","log","address","abi","eth","Contract"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAEA,MAAMC,MAAM,GAAG,+DAAf,C,CAA+E;;AAC/E,IAAIC,IAAJ;AAEAC,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgC,YAAY;AACxC,QAAMC,mBAAmB,GAAGF,MAAM,CAACG,QAAnC;;AACA,MAAID,mBAAJ,EAAyB;AACrB,QAAIE,QAAQ,GAAG,IAAIP,IAAJ,CAASK,mBAAT,CAAf;;AACA,QAAI;AACA,YAAMA,mBAAmB,CAACG,MAApB,EAAN;AACAN,MAAAA,IAAI,GAAGK,QAAP;AACH,KAHD,CAGE,OAAOE,KAAP,EAAc;AACZC,MAAAA,KAAK,CAAC,kCAAD,CAAL;AACH;AACJ,GARD,MAQO;AACHC,IAAAA,OAAO,CAACC,GAAR,CAAY,qEAAZ;AACAV,IAAAA,IAAI,GAAG,IAAIF,IAAJ,CAASC,MAAT,CAAP;AACH;AACJ,CAdD;AAeAU,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACA,MAAMW,OAAO,GAAG,4CAAhB;AACA,MAAMC,GAAG,GAAG,CAAC;AAAC,cAAW,KAAZ;AAAkB,YAAS,CAAC;AAAC,YAAO,GAAR;AAAY,YAAO;AAAnB,GAAD,CAA3B;AAA0D,UAAO,UAAjE;AAA4E,aAAU,EAAtF;AAAyF,aAAU,KAAnG;AAAyG,qBAAkB,YAA3H;AAAwI,UAAO;AAA/I,CAAD,EAA4J;AAAC,cAAW,IAAZ;AAAiB,YAAS,EAA1B;AAA6B,UAAO,SAApC;AAA8C,aAAU,CAAC;AAAC,YAAO,GAAR;AAAY,YAAO;AAAnB,GAAD,CAAxD;AAAuF,aAAU,KAAjG;AAAuG,qBAAkB,MAAzH;AAAgI,UAAO;AAAvI,CAA5J,CAAZ;AACA,eAAe,IAAIZ,IAAI,CAACa,GAAL,CAASC,QAAb,CAAsBF,GAAtB,EAA2BD,OAA3B,CAAf,C,CACA","sourcesContent":["import Web3 from 'web3';\n\nconst rpcURL = \"https://ropsten.infura.io/v3/cf658270146645bca881f8a7d4752099\" // Your RCP URL goes here\nlet web3;\n\nwindow.addEventListener('load', async () => {\n    const metaMaskEthProvider = window.ethereum;\n    if (metaMaskEthProvider) {\n        let instance = new Web3(metaMaskEthProvider);\n        try {\n            await metaMaskEthProvider.enable();\n            web3 = instance;\n        } catch (error) {\n            alert('Allow access for the app to work');\n        }\n    } else {\n        console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n        web3 = new Web3(rpcURL);\n    }\n});\nconsole.log(web3);\nconst address = '0x22b6acd52a80540260376236d904e20b5b889246';\nconst abi = [{\"constant\":false,\"inputs\":[{\"name\":\"x\",\"type\":\"string\"}],\"name\":\"sendHash\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getHash\",\"outputs\":[{\"name\":\"x\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]\nexport default new web3.eth.Contract(abi, address);\n// export default currentWeb3;"]},"metadata":{},"sourceType":"module"}