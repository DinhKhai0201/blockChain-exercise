{"ast":null,"code":"//imports the Web3 API\nimport Web3 from 'web3';\n/**\n * creates & exports new instance for \n * Web3 using provided service by Metamask.\n */\n\nconst rpcURL = \"https://ropsten.infura.io/v3/cf658270146645bca881f8a7d4752099\"; // Your RCP URL goes here\n\nlet web3;\nwindow.addEventListener('load', async () => {\n  if (window.ethereum === 'undefined') {\n    let instance = new Web3(window.ethereum);\n\n    try {\n      // Request account access if needed\n      await window.ethereum.enable(); // Acccounts now exposed\n\n      web3 = instance;\n      console.log(\"enable\");\n    } catch (error) {\n      // User denied account access...\n      alert('Please allow access for the app to work');\n    }\n  } else if (window.web3) {\n    web3 = new Web3(web3.currentProvider);\n    console.log(\"Metamask\"); // Acccounts always exposed\n  } else {\n    web3 = new Web3(new Web3.providers.HttpProvider(rpcURL));\n    console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n  }\n});\nweb3.eth.getBalance(web3.eth.accounts[0], function (error, result) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log(web3.fromWei(result.toNumber()));\n  }\n});\nexport default web3;","map":{"version":3,"sources":["/home/kai/train blockchain/ipfs/src/web3.js"],"names":["Web3","rpcURL","web3","window","addEventListener","ethereum","instance","enable","console","log","error","alert","currentProvider","providers","HttpProvider","eth","getBalance","accounts","result","fromWei","toNumber"],"mappings":"AAAA;AACA,OAAOA,IAAP,MAAiB,MAAjB;AAEA;;;;;AAKA,MAAMC,MAAM,GAAG,+DAAf,C,CAA+E;;AAE/E,IAAIC,IAAJ;AACAC,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgC,YAAY;AACxC,MAAID,MAAM,CAACE,QAAP,KAAoB,WAAxB,EAAqC;AACjC,QAAIC,QAAQ,GAAG,IAAIN,IAAJ,CAASG,MAAM,CAACE,QAAhB,CAAf;;AACA,QAAI;AACA;AACA,YAAMF,MAAM,CAACE,QAAP,CAAgBE,MAAhB,EAAN,CAFA,CAGA;;AACAL,MAAAA,IAAI,GAAGI,QAAP;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACH,KAND,CAME,OAAOC,KAAP,EAAc;AACZ;AACAC,MAAAA,KAAK,CAAC,yCAAD,CAAL;AACH;AACJ,GAZD,MAYO,IAAIR,MAAM,CAACD,IAAX,EAAiB;AACpBA,IAAAA,IAAI,GAAG,IAAIF,IAAJ,CAASE,IAAI,CAACU,eAAd,CAAP;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAFoB,CAGpB;AACH,GAJM,MAKF;AACDP,IAAAA,IAAI,GAAG,IAAIF,IAAJ,CAAS,IAAIA,IAAI,CAACa,SAAL,CAAeC,YAAnB,CAAgCb,MAAhC,CAAT,CAAP;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,qEAAZ;AACH;AACJ,CAtBD;AAuBAP,IAAI,CAACa,GAAL,CAASC,UAAT,CAAoBd,IAAI,CAACa,GAAL,CAASE,QAAT,CAAkB,CAAlB,CAApB,EAA0C,UAASP,KAAT,EAAgBQ,MAAhB,EAAuB;AAC7D,MAAIR,KAAJ,EAAW;AACPF,IAAAA,OAAO,CAACE,KAAR,CAAcA,KAAd;AACH,GAFD,MAEO;AACHF,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAI,CAACiB,OAAL,CAAaD,MAAM,CAACE,QAAP,EAAb,CAAZ;AACH;AACJ,CAND;AAOA,eAAelB,IAAf","sourcesContent":["//imports the Web3 API\nimport Web3 from 'web3';\n\n/**\n * creates & exports new instance for \n * Web3 using provided service by Metamask.\n */\n\nconst rpcURL = \"https://ropsten.infura.io/v3/cf658270146645bca881f8a7d4752099\" // Your RCP URL goes here\n\nlet web3;\nwindow.addEventListener('load', async () => {\n    if (window.ethereum === 'undefined') {\n        let instance = new Web3(window.ethereum);\n        try {\n            // Request account access if needed\n            await window.ethereum.enable();\n            // Acccounts now exposed\n            web3 = instance;\n            console.log(\"enable\");\n        } catch (error) {\n            // User denied account access...\n            alert('Please allow access for the app to work');\n        }\n    } else if (window.web3) {\n        web3 = new Web3(web3.currentProvider);\n        console.log(\"Metamask\");\n        // Acccounts always exposed\n    }\n    else {\n        web3 = new Web3(new Web3.providers.HttpProvider(rpcURL));\n        console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n    }\n});\nweb3.eth.getBalance(web3.eth.accounts[0], function(error, result){\n    if (error) {\n        console.error(error)\n    } else {\n        console.log(web3.fromWei(result.toNumber()));\n    }\n});\nexport default web3;"]},"metadata":{},"sourceType":"module"}