{"ast":null,"code":"import Web3 from 'web3';\nconst rpcURL = \"https://ropsten.infura.io/v3/cf658270146645bca881f8a7d4752099\"; // var web3cur;\n// window.addEventListener('load', async () => {\n//     if (window.ethereum) {\n//         try {\n//             await window.ethereum.enable();\n//             web3cur = new Web3(window.ethereum);\n//             console.log(web3cur);\n//         } catch (error) {\n//             alert('Please allow access for the app to work');\n//         }\n//     } else if (window.web3) {\n//          web3cur = new Web3(window.web3.currentProvider);\n//         console.log(\"Metamask\");\n//         console.log(web3cur);\n//     } else {\n//         console.log(web3cur);\n//         console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n//     }\n// });\n// console.log(web3cur)\n\nlet web3cur = new Promise((resolve, reject) => {\n  window.addEventListener('load', async () => {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        await window.ethereum.enable();\n        let cur = new Web3(window.ethereum);\n        resolve(cur);\n      } catch (error) {\n        alert('Please allow access for the app to work');\n        reject(cur);\n      }\n\n      console.log(\"Metamask\");\n    } else {\n      let cur = new Web3(new Web3.providers.HttpProvider(rpcURL));\n      resolve(cur);\n    }\n  });\n});\nexport default web3cur;","map":{"version":3,"sources":["/home/kai/train blockchain/ipfs/src/web3.js"],"names":["Web3","rpcURL","web3cur","Promise","resolve","reject","window","addEventListener","ethereum","enable","cur","error","alert","console","log","providers","HttpProvider"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAEA,MAAMC,MAAM,GAAG,+DAAf,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,OAAO,GAAG,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAmB;AACzCC,EAAAA,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgC,YAAY;AAC5C,QAAI,OAAOD,MAAM,CAACE,QAAd,KAA2B,WAA/B,EAA4C;AACxC,UAAI;AACA,cAAMF,MAAM,CAACE,QAAP,CAAgBC,MAAhB,EAAN;AACA,YAAIC,GAAG,GAAG,IAAIV,IAAJ,CAASM,MAAM,CAACE,QAAhB,CAAV;AACAJ,QAAAA,OAAO,CAACM,GAAD,CAAP;AACH,OAJD,CAIE,OAAOC,KAAP,EAAc;AACZC,QAAAA,KAAK,CAAC,yCAAD,CAAL;AACAP,QAAAA,MAAM,CAACK,GAAD,CAAN;AACH;;AACDG,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH,KAVD,MAUO;AACH,UAAIJ,GAAG,GAAG,IAAIV,IAAJ,CAAS,IAAIA,IAAI,CAACe,SAAL,CAAeC,YAAnB,CAAgCf,MAAhC,CAAT,CAAV;AACAG,MAAAA,OAAO,CAACM,GAAD,CAAP;AACC;AACJ,GAfD;AAgBH,CAjBa,CAAd;AAmBA,eAAeR,OAAf","sourcesContent":["import Web3 from 'web3';\n\nconst rpcURL = \"https://ropsten.infura.io/v3/cf658270146645bca881f8a7d4752099\" \n// var web3cur;\n// window.addEventListener('load', async () => {\n//     if (window.ethereum) {\n//         try {\n//             await window.ethereum.enable();\n//             web3cur = new Web3(window.ethereum);\n//             console.log(web3cur);\n//         } catch (error) {\n//             alert('Please allow access for the app to work');\n//         }\n//     } else if (window.web3) {\n//          web3cur = new Web3(window.web3.currentProvider);\n//         console.log(\"Metamask\");\n//         console.log(web3cur);\n//     } else {\n//         console.log(web3cur);\n//         console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n//     }\n// });\n// console.log(web3cur)\nlet web3cur = new Promise((resolve, reject)=>{\n    window.addEventListener('load', async () => {\n    if (typeof window.ethereum !== 'undefined') {\n        try {\n            await window.ethereum.enable();\n            let cur = new Web3(window.ethereum);\n            resolve(cur);\n        } catch (error) {\n            alert('Please allow access for the app to work');\n            reject(cur);\n        }\n        console.log(\"Metamask\")\n    } else {\n        let cur = new Web3(new Web3.providers.HttpProvider(rpcURL));\n        resolve(cur);\n        }\n    })\n});\n\nexport default web3cur;"]},"metadata":{},"sourceType":"module"}