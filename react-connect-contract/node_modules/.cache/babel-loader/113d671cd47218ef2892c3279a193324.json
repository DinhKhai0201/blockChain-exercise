{"ast":null,"code":"import Web3 from 'web3';\nconst rpcURL = \"https://ropsten.infura.io/v3/cf658270146645bca881f8a7d4752099\"; // Your RCP URL goes here\n\nvar web3; // var metaMaskEthProvider = window.ethereum;\n\nwindow.addEventListener('load', async () => {\n  if (typeof web3 !== 'undefined') {\n    try {\n      await window.web3.enable();\n      web3 = new Web3(window.web3);\n    } catch (error) {\n      alert('Allow access for the app to work');\n    }\n  } else {\n    console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n    web3 = new Web3(new Web3.providers.HttpProvider(rpcURL));\n  } // if (metaMaskEthProvider) {\n  //     try {\n  //         await metaMaskEthProvider.enable();\n  //         web3 = new Web3(metaMaskEthProvider);\n  //     } catch (error) {\n  //         alert('Allow access for the app to work');\n  //     }\n  // } else {\n  //     console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n  //     web3 = new Web3(new Web3.providers.HttpProvider(rpcURL));\n  // }\n\n});\nconsole.log(web3);\nconst address = '0x22b6acd52a80540260376236d904e20b5b889246';\nconst abi = [{\n  \"constant\": false,\n  \"inputs\": [{\n    \"name\": \"x\",\n    \"type\": \"string\"\n  }],\n  \"name\": \"sendHash\",\n  \"outputs\": [],\n  \"payable\": false,\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"constant\": true,\n  \"inputs\": [],\n  \"name\": \"getHash\",\n  \"outputs\": [{\n    \"name\": \"x\",\n    \"type\": \"string\"\n  }],\n  \"payable\": false,\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}]; // var Contract =  new web3.eth.Contract(abi, address);\n\nexport default web3;","map":{"version":3,"sources":["/home/kai/train blockchain/ipfs/src/web3.js"],"names":["Web3","rpcURL","web3","window","addEventListener","enable","error","alert","console","log","providers","HttpProvider","address","abi"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAEA,MAAMC,MAAM,GAAG,+DAAf,C,CAA+E;;AAC/E,IAAIC,IAAJ,C,CAEA;;AACAC,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgC,YAAY;AACxC,MAAI,OAAOF,IAAP,KAAgB,WAApB,EAAiC;AAC7B,QAAI;AACA,YAAMC,MAAM,CAACD,IAAP,CAAYG,MAAZ,EAAN;AACAH,MAAAA,IAAI,GAAG,IAAIF,IAAJ,CAASG,MAAM,CAACD,IAAhB,CAAP;AACH,KAHD,CAGE,OAAOI,KAAP,EAAc;AACZC,MAAAA,KAAK,CAAC,kCAAD,CAAL;AACH;AACJ,GAPD,MAOO;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAY,qEAAZ;AACFP,IAAAA,IAAI,GAAG,IAAIF,IAAJ,CAAS,IAAIA,IAAI,CAACU,SAAL,CAAeC,YAAnB,CAAgCV,MAAhC,CAAT,CAAP;AACH,GAXuC,CAYxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACH,CAvBD;AAwBAO,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACA,MAAMU,OAAO,GAAG,4CAAhB;AACA,MAAMC,GAAG,GAAG,CAAC;AAAC,cAAW,KAAZ;AAAkB,YAAS,CAAC;AAAC,YAAO,GAAR;AAAY,YAAO;AAAnB,GAAD,CAA3B;AAA0D,UAAO,UAAjE;AAA4E,aAAU,EAAtF;AAAyF,aAAU,KAAnG;AAAyG,qBAAkB,YAA3H;AAAwI,UAAO;AAA/I,CAAD,EAA4J;AAAC,cAAW,IAAZ;AAAiB,YAAS,EAA1B;AAA6B,UAAO,SAApC;AAA8C,aAAU,CAAC;AAAC,YAAO,GAAR;AAAY,YAAO;AAAnB,GAAD,CAAxD;AAAuF,aAAU,KAAjG;AAAuG,qBAAkB,MAAzH;AAAgI,UAAO;AAAvI,CAA5J,CAAZ,C,CACA;;AACA,eAAeX,IAAf","sourcesContent":["import Web3 from 'web3';\n\nconst rpcURL = \"https://ropsten.infura.io/v3/cf658270146645bca881f8a7d4752099\" // Your RCP URL goes here\nvar web3;\n\n// var metaMaskEthProvider = window.ethereum;\nwindow.addEventListener('load', async () => {\n    if (typeof web3 !== 'undefined') {\n        try {\n            await window.web3.enable();\n            web3 = new Web3(window.web3);\n        } catch (error) {\n            alert('Allow access for the app to work');\n        }\n    } else {\n          console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n        web3 = new Web3(new Web3.providers.HttpProvider(rpcURL));\n    }\n    // if (metaMaskEthProvider) {\n    //     try {\n    //         await metaMaskEthProvider.enable();\n    //         web3 = new Web3(metaMaskEthProvider);\n    //     } catch (error) {\n    //         alert('Allow access for the app to work');\n    //     }\n    // } else {\n    //     console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n    //     web3 = new Web3(new Web3.providers.HttpProvider(rpcURL));\n    // }\n});\nconsole.log(web3);\nconst address = '0x22b6acd52a80540260376236d904e20b5b889246';\nconst abi = [{\"constant\":false,\"inputs\":[{\"name\":\"x\",\"type\":\"string\"}],\"name\":\"sendHash\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getHash\",\"outputs\":[{\"name\":\"x\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]\n// var Contract =  new web3.eth.Contract(abi, address);\nexport default web3;"]},"metadata":{},"sourceType":"module"}