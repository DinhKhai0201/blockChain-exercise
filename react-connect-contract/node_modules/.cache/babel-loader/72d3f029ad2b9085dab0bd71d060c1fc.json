{"ast":null,"code":"//imports the Web3 API\nimport Web3 from 'web3';\n/**\n * creates & exports new instance for \n * Web3 using provided service by Metamask.\n */\n\nlet web3;\nconst rpcURL = \"https://ropsten.infura.io/v3/cf658270146645bca881f8a7d4752099\"; // Your RCP URL goes here\n\nif (window.ethereum) {\n  let instance = new Web3(window.ethereum);\n\n  try {\n    // Request account access if needed\n    window.ethereum.enable(); // Acccounts now exposed\n\n    web3 = instance;\n  } catch (error) {\n    // User denied account access...\n    alert('Please allow access for the app to work');\n  }\n\n  if (typeof web3 !== 'undefined') {\n    web3 = new Web3(web3.currentProvider);\n  } else {\n    web3 = new Web3(new Web3.providers.HttpProvider(\"https://ropsten.infura.io/v3/cf658270146645bca881f8a7d4752099\"));\n  }\n} else if (window.web3) {\n  web3 = new Web3(web3.currentProvider); // Acccounts always exposed\n} else {\n  console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n}\n\nexport default web3;","map":{"version":3,"sources":["/home/kai/train blockchain/ipfs/src/web3.js"],"names":["Web3","web3","rpcURL","window","ethereum","instance","enable","error","alert","currentProvider","providers","HttpProvider","console","log"],"mappings":"AAAA;AACA,OAAOA,IAAP,MAAiB,MAAjB;AAEA;;;;;AAIA,IAAIC,IAAJ;AACA,MAAMC,MAAM,GAAG,+DAAf,C,CAA+E;;AAE/E,IAAIC,MAAM,CAACC,QAAX,EAAqB;AACjB,MAAIC,QAAQ,GAAG,IAAIL,IAAJ,CAASG,MAAM,CAACC,QAAhB,CAAf;;AACA,MAAI;AACA;AACAD,IAAAA,MAAM,CAACC,QAAP,CAAgBE,MAAhB,GAFA,CAGA;;AACAL,IAAAA,IAAI,GAAGI,QAAP;AAEH,GAND,CAME,OAAOE,KAAP,EAAc;AACZ;AACAC,IAAAA,KAAK,CAAC,yCAAD,CAAL;AACH;;AACD,MAAI,OAAOP,IAAP,KAAgB,WAApB,EAAiC;AAC7BA,IAAAA,IAAI,GAAG,IAAID,IAAJ,CAASC,IAAI,CAACQ,eAAd,CAAP;AACH,GAFD,MAEO;AACHR,IAAAA,IAAI,GAAG,IAAID,IAAJ,CAAS,IAAIA,IAAI,CAACU,SAAL,CAAeC,YAAnB,CAAgC,+DAAhC,CAAT,CAAP;AACP;AACA,CAjBD,MAiBO,IAAIR,MAAM,CAACF,IAAX,EAAiB;AACpBA,EAAAA,IAAI,GAAG,IAAID,IAAJ,CAASC,IAAI,CAACQ,eAAd,CAAP,CADoB,CAEpB;AACH,CAHM,MAGC;AACJG,EAAAA,OAAO,CAACC,GAAR,CAAY,qEAAZ;AACH;;AAED,eAAeZ,IAAf","sourcesContent":["//imports the Web3 API\nimport Web3 from 'web3';\n\n/**\n * creates & exports new instance for \n * Web3 using provided service by Metamask.\n */\nlet web3;\nconst rpcURL = \"https://ropsten.infura.io/v3/cf658270146645bca881f8a7d4752099\" // Your RCP URL goes here\n\nif (window.ethereum) {\n    let instance = new Web3(window.ethereum);\n    try {\n        // Request account access if needed\n        window.ethereum.enable();\n        // Acccounts now exposed\n        web3 = instance;\n\n    } catch (error) {\n        // User denied account access...\n        alert('Please allow access for the app to work');\n    } \n    if (typeof web3 !== 'undefined') {\n        web3 = new Web3(web3.currentProvider); \n    } else {\n        web3 = new Web3(new Web3.providers.HttpProvider(\"https://ropsten.infura.io/v3/cf658270146645bca881f8a7d4752099\")); \n} \n} else if (window.web3) {\n    web3 = new Web3(web3.currentProvider);\n    // Acccounts always exposed\n}  else {\n    console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n}\n\nexport default web3;"]},"metadata":{},"sourceType":"module"}