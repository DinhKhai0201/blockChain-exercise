{"ast":null,"code":"import Web3 from 'web3';\nconst rpcURL = \"https://ropsten.infura.io/v3/cf658270146645bca881f8a7d4752099\"; // Your RCP URL goes here\n\nvar web3; // window.addEventListener('load', async () => {\n//     if (window.ethereum) {\n//         let instance = new Web3(window.ethereum);\n//         try {\n//             // Request account access if needed\n//             await window.ethereum.enable();\n//             // Acccounts now exposed\n//             web3 = instance;\n//             console.log(\"enable\");\n//         } catch (error) {\n//             // User denied account access...\n//             alert('Please allow access for the app to work');\n//         }\n//     } else if (window.web3) {\n//         web3 = new Web3(web3.currentProvider);\n//         console.log(\"Metamask\");\n//         // Acccounts always exposed\n//     }\n//     else {\n//         console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n//     }\n// });\n\nwindow.addEventListener(\"load\", async function () {\n  if (window.ethereum) {\n    web3 = new Web3(window.ethereum);\n    await window.ethereum.enable();\n  } else {\n    web3 = new Web3(new Web3.providers.HttpProvider(rpcURL));\n  }\n});\nconsole.log(web3);\nexport default web3;","map":{"version":3,"sources":["/home/kai/train blockchain/ipfs/src/web3.js"],"names":["Web3","rpcURL","web3","window","addEventListener","ethereum","enable","providers","HttpProvider","console","log"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAEA,MAAMC,MAAM,GAAG,+DAAf,C,CAA+E;;AAE/E,IAAIC,IAAJ,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAC,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgC,kBAAiB;AAC/C,MAAID,MAAM,CAACE,QAAX,EAAqB;AACnBH,IAAAA,IAAI,GAAG,IAAIF,IAAJ,CAASG,MAAM,CAACE,QAAhB,CAAP;AACA,UAAMF,MAAM,CAACE,QAAP,CAAgBC,MAAhB,EAAN;AACD,GAHD,MAGO;AACLJ,IAAAA,IAAI,GAAG,IAAIF,IAAJ,CAAS,IAAIA,IAAI,CAACO,SAAL,CAAeC,YAAnB,CAAgCP,MAAhC,CAAT,CAAP;AACD;AACF,CAPD;AAQAQ,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACA,eAAeA,IAAf","sourcesContent":["import Web3 from 'web3';\n\nconst rpcURL = \"https://ropsten.infura.io/v3/cf658270146645bca881f8a7d4752099\" // Your RCP URL goes here\n\nvar web3 ;\n// window.addEventListener('load', async () => {\n//     if (window.ethereum) {\n//         let instance = new Web3(window.ethereum);\n//         try {\n//             // Request account access if needed\n//             await window.ethereum.enable();\n//             // Acccounts now exposed\n//             web3 = instance;\n//             console.log(\"enable\");\n//         } catch (error) {\n//             // User denied account access...\n//             alert('Please allow access for the app to work');\n//         }\n//     } else if (window.web3) {\n//         web3 = new Web3(web3.currentProvider);\n//         console.log(\"Metamask\");\n//         // Acccounts always exposed\n//     }\n//     else {\n//         console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n//     }\n// });\nwindow.addEventListener(\"load\", async function() {\n  if (window.ethereum) {\n    web3 = new Web3(window.ethereum);\n    await window.ethereum.enable(); \n  } else {\n    web3 = new Web3(new Web3.providers.HttpProvider(rpcURL));\n  }\n});\nconsole.log(web3)\nexport default web3;"]},"metadata":{},"sourceType":"module"}