{"ast":null,"code":"import Web3 from 'web3';\nconst rpcURL = \"https://ropsten.infura.io/v3/cf658270146645bca881f8a7d4752099\"; // Your RCP URL goes here\n\nvar web3;\nconst metaMaskEthProvider = window.ethereum;\nwindow.addEventListener('load', async () => {\n  if (metaMaskEthProvider && typeof web3 == 'undefined') {\n    try {\n      await metaMaskEthProvider.enable();\n      web3 = new Web3(metaMaskEthProvider);\n    } catch (error) {\n      alert('Allow access for the app to work');\n    }\n  } else {\n    console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n    web3 = new Web3(rpcURL);\n  }\n});\nconsole.log(metaMaskEthProvider);\nconst address = '0x22b6acd52a80540260376236d904e20b5b889246';\nconst abi = [{\n  \"constant\": false,\n  \"inputs\": [{\n    \"name\": \"x\",\n    \"type\": \"string\"\n  }],\n  \"name\": \"sendHash\",\n  \"outputs\": [],\n  \"payable\": false,\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"constant\": true,\n  \"inputs\": [],\n  \"name\": \"getHash\",\n  \"outputs\": [{\n    \"name\": \"x\",\n    \"type\": \"string\"\n  }],\n  \"payable\": false,\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}];\nvar Contract = new web3.eth.Contract(abi, address);\nexport default web3;","map":{"version":3,"sources":["/home/kai/train blockchain/ipfs/src/web3.js"],"names":["Web3","rpcURL","web3","metaMaskEthProvider","window","ethereum","addEventListener","enable","error","alert","console","log","address","abi","Contract","eth"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAEA,MAAMC,MAAM,GAAG,+DAAf,C,CAA+E;;AAC/E,IAAIC,IAAJ;AAEA,MAAMC,mBAAmB,GAAGC,MAAM,CAACC,QAAnC;AACAD,MAAM,CAACE,gBAAP,CAAwB,MAAxB,EAAgC,YAAY;AACxC,MAAIH,mBAAmB,IAAI,OAAOD,IAAP,IAAe,WAA1C,EAAuD;AACnD,QAAI;AACA,YAAMC,mBAAmB,CAACI,MAApB,EAAN;AACAL,MAAAA,IAAI,GAAG,IAAIF,IAAJ,CAASG,mBAAT,CAAP;AACH,KAHD,CAGE,OAAOK,KAAP,EAAc;AACZC,MAAAA,KAAK,CAAC,kCAAD,CAAL;AACH;AACJ,GAPD,MAOO;AACHC,IAAAA,OAAO,CAACC,GAAR,CAAY,qEAAZ;AACAT,IAAAA,IAAI,GAAG,IAAIF,IAAJ,CAASC,MAAT,CAAP;AACH;AACJ,CAZD;AAaAS,OAAO,CAACC,GAAR,CAAYR,mBAAZ;AACA,MAAMS,OAAO,GAAG,4CAAhB;AACA,MAAMC,GAAG,GAAG,CAAC;AAAC,cAAW,KAAZ;AAAkB,YAAS,CAAC;AAAC,YAAO,GAAR;AAAY,YAAO;AAAnB,GAAD,CAA3B;AAA0D,UAAO,UAAjE;AAA4E,aAAU,EAAtF;AAAyF,aAAU,KAAnG;AAAyG,qBAAkB,YAA3H;AAAwI,UAAO;AAA/I,CAAD,EAA4J;AAAC,cAAW,IAAZ;AAAiB,YAAS,EAA1B;AAA6B,UAAO,SAApC;AAA8C,aAAU,CAAC;AAAC,YAAO,GAAR;AAAY,YAAO;AAAnB,GAAD,CAAxD;AAAuF,aAAU,KAAjG;AAAuG,qBAAkB,MAAzH;AAAgI,UAAO;AAAvI,CAA5J,CAAZ;AACA,IAAIC,QAAQ,GAAI,IAAIZ,IAAI,CAACa,GAAL,CAASD,QAAb,CAAsBD,GAAtB,EAA2BD,OAA3B,CAAhB;AACA,eAAeV,IAAf","sourcesContent":["import Web3 from 'web3';\n\nconst rpcURL = \"https://ropsten.infura.io/v3/cf658270146645bca881f8a7d4752099\" // Your RCP URL goes here\nvar web3;\n\nconst metaMaskEthProvider = window.ethereum;\nwindow.addEventListener('load', async () => {\n    if (metaMaskEthProvider && typeof web3 == 'undefined') {\n        try {\n            await metaMaskEthProvider.enable();\n            web3 = new Web3(metaMaskEthProvider);\n        } catch (error) {\n            alert('Allow access for the app to work');\n        }\n    } else {\n        console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n        web3 = new Web3(rpcURL);\n    }\n});\nconsole.log(metaMaskEthProvider);\nconst address = '0x22b6acd52a80540260376236d904e20b5b889246';\nconst abi = [{\"constant\":false,\"inputs\":[{\"name\":\"x\",\"type\":\"string\"}],\"name\":\"sendHash\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getHash\",\"outputs\":[{\"name\":\"x\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]\nvar Contract =  new web3.eth.Contract(abi, address);\nexport default web3;"]},"metadata":{},"sourceType":"module"}