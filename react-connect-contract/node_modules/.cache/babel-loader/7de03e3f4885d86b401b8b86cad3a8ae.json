{"ast":null,"code":"import web3cur from './web3';\nconst address = '0x22b6acd52a80540260376236d904e20b5b889246';\nconst abi = [{\n  \"constant\": false,\n  \"inputs\": [{\n    \"name\": \"x\",\n    \"type\": \"string\"\n  }],\n  \"name\": \"sendHash\",\n  \"outputs\": [],\n  \"payable\": false,\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"constant\": true,\n  \"inputs\": [],\n  \"name\": \"getHash\",\n  \"outputs\": [{\n    \"name\": \"x\",\n    \"type\": \"string\"\n  }],\n  \"payable\": false,\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}];\nconst contract = new web3cur.eth.contract(abi, address, {\n  gasPrice: 10000000000\n});\nweb3cur.eth.getAccounts[0](console.log);\nweb3cur.eth.getProtocolVersion(console.log);\nweb3cur.eth.isSyncing(console.log);\nweb3cur.eth.getCoinbase(console.log);\nweb3cur.eth.getBalance(\"0x58258c78311b8ddEaD8650Ac1ab60F681FC5De43\", (err, wei) => {\n  console.log(wei);\n});\nexport default contract;","map":{"version":3,"sources":["/home/kai/train blockchain/ipfs/src/storehash.js"],"names":["web3cur","address","abi","contract","eth","gasPrice","getAccounts","console","log","getProtocolVersion","isSyncing","getCoinbase","getBalance","err","wei"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,QAApB;AAEA,MAAMC,OAAO,GAAG,4CAAhB;AACA,MAAMC,GAAG,GAAG,CAAC;AAAC,cAAW,KAAZ;AAAkB,YAAS,CAAC;AAAC,YAAO,GAAR;AAAY,YAAO;AAAnB,GAAD,CAA3B;AAA0D,UAAO,UAAjE;AAA4E,aAAU,EAAtF;AAAyF,aAAU,KAAnG;AAAyG,qBAAkB,YAA3H;AAAwI,UAAO;AAA/I,CAAD,EAA4J;AAAC,cAAW,IAAZ;AAAiB,YAAS,EAA1B;AAA6B,UAAO,SAApC;AAA8C,aAAU,CAAC;AAAC,YAAO,GAAR;AAAY,YAAO;AAAnB,GAAD,CAAxD;AAAuF,aAAU,KAAjG;AAAuG,qBAAkB,MAAzH;AAAgI,UAAO;AAAvI,CAA5J,CAAZ;AACA,MAAMC,QAAQ,GAAG,IAAIH,OAAO,CAACI,GAAR,CAAYD,QAAhB,CAAyBD,GAAzB,EAA8BD,OAA9B,EAAsC;AAAEI,EAAAA,QAAQ,EAAE;AAAZ,CAAtC,CAAjB;AACAL,OAAO,CAACI,GAAR,CAAYE,WAAZ,CAAwB,CAAxB,EAA2BC,OAAO,CAACC,GAAnC;AACAR,OAAO,CAACI,GAAR,CAAYK,kBAAZ,CAA+BF,OAAO,CAACC,GAAvC;AACAR,OAAO,CAACI,GAAR,CAAYM,SAAZ,CAAsBH,OAAO,CAACC,GAA9B;AACAR,OAAO,CAACI,GAAR,CAAYO,WAAZ,CAAwBJ,OAAO,CAACC,GAAhC;AACAR,OAAO,CAACI,GAAR,CAAYQ,UAAZ,CAAuB,4CAAvB,EAAqE,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC3EP,EAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACH,CAFL;AAKA,eAAeX,QAAf","sourcesContent":["import web3cur from './web3';\n\nconst address = '0x22b6acd52a80540260376236d904e20b5b889246';\nconst abi = [{\"constant\":false,\"inputs\":[{\"name\":\"x\",\"type\":\"string\"}],\"name\":\"sendHash\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getHash\",\"outputs\":[{\"name\":\"x\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]\nconst contract = new web3cur.eth.contract(abi, address,{ gasPrice: 10000000000 });\nweb3cur.eth.getAccounts[0](console.log);\nweb3cur.eth.getProtocolVersion(console.log)\nweb3cur.eth.isSyncing(console.log)\nweb3cur.eth.getCoinbase(console.log)\nweb3cur.eth.getBalance(\"0x58258c78311b8ddEaD8650Ac1ab60F681FC5De43\", (err, wei) => {\n        console.log(wei);\n    });\n\n\nexport default contract"]},"metadata":{},"sourceType":"module"}