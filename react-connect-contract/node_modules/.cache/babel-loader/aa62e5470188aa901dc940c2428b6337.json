{"ast":null,"code":"import web3cur from './web3';\nimport Web3 from 'web3';\nconst address = '0x9ba0eff6e9c206574c8ca1a9f7292b7bce4fc8ae';\nconst abi = [{\n  \"constant\": true,\n  \"inputs\": [],\n  \"name\": \"getHash\",\n  \"outputs\": [{\n    \"name\": \"x\",\n    \"type\": \"string\"\n  }],\n  \"payable\": false,\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"constant\": true,\n  \"inputs\": [],\n  \"name\": \"ipfsHash\",\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"string\"\n  }],\n  \"payable\": false,\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}]; // web3cur.eth.getAccounts(function(err, result) {\n//   if (!err) {\n//     console.log(\"getAccounts: \",result)\n//   } \n// });\n// web3cur.eth.getProtocolVersion(console.log)\n// web3cur.eth.isSyncing(console.log)\n// web3cur.eth.getCoinbase(function(err, getCoinbase) {\n//   if (!err) {\n//     console.log(\"getCoinbase: \",getCoinbase)\n//   }\n// })\n// console.log(\"ultil\", Web3.utils.randomHex(32))\n// var BN = Web3.utils.BN;\n// console.log(\"BN to string \",new BN(1234).toString())\n// console.log(\"keccak \",Web3.utils.keccak256(\"string\"))\n// console.log(\"towei \",Web3.utils.toWei('1', 'ether'))\n// console.log(\"to ether\",Web3.utils.fromWei('1', 'ether'))\n// web3cur.eth.getHashrate(console.log)\n// web3cur.eth.getBalance(\"0x58258c78311b8ddEaD8650Ac1ab60F681FC5De43\", (err, wei) => {\n//         console.log(wei);\n//     });\n// myContract.events.MyEvent([options][, callback])\n// web3cur.eth.sendTransaction({\n//     from: '0xD6C23efb8c399dd7369CA490B4efAD86C8c885F3',\n//     to: '0x7BdFBE40673e500D664455a177FFe2db3aD1eeE7',\n//     value: '1000000000000000',\n//     gasPrice: '100000000000'\n// }, function(err, success) {\n//   if (!err) {\n//     console.log(\"success\")\n//   }\n// })\n// contract.methods.sendHash(\"hello\").send({},function(err, result) {\n//   console.log(\"sendHash :\",result)\n// })\n// contract.methods.getHash().call(function(err, result) {\n//   console.log(\"getHash: \",result)\n// })\n// export default contract","map":{"version":3,"sources":["/home/kai/train blockchain/ipfs/src/storehash.js"],"names":["web3cur","Web3","address","abi"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,QAApB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,MAAMC,OAAO,GAAG,4CAAhB;AACA,MAAMC,GAAG,GAAG,CACR;AACI,cAAY,IADhB;AAEI,YAAU,EAFd;AAGI,UAAQ,SAHZ;AAII,aAAW,CACP;AACI,YAAQ,GADZ;AAEI,YAAQ;AAFZ,GADO,CAJf;AAUI,aAAW,KAVf;AAWI,qBAAmB,MAXvB;AAYI,UAAQ;AAZZ,CADQ,EAeR;AACI,cAAY,IADhB;AAEI,YAAU,EAFd;AAGI,UAAQ,UAHZ;AAII,aAAW,CACP;AACI,YAAQ,EADZ;AAEI,YAAQ;AAFZ,GADO,CAJf;AAUI,aAAW,KAVf;AAWI,qBAAmB,MAXvB;AAYI,UAAQ;AAZZ,CAfQ,CAAZ,C,CA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import web3cur from './web3';\nimport Web3 from 'web3';\nconst address = '0x9ba0eff6e9c206574c8ca1a9f7292b7bce4fc8ae';\nconst abi = [\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"getHash\",\n        \"outputs\": [\n            {\n                \"name\": \"x\",\n                \"type\": \"string\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"ipfsHash\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }\n]\n// web3cur.eth.getAccounts(function(err, result) {\n//   if (!err) {\n//     console.log(\"getAccounts: \",result)\n//   } \n// });\n// web3cur.eth.getProtocolVersion(console.log)\n// web3cur.eth.isSyncing(console.log)\n// web3cur.eth.getCoinbase(function(err, getCoinbase) {\n//   if (!err) {\n//     console.log(\"getCoinbase: \",getCoinbase)\n//   }\n// })\n// console.log(\"ultil\", Web3.utils.randomHex(32))\n// var BN = Web3.utils.BN;\n// console.log(\"BN to string \",new BN(1234).toString())\n// console.log(\"keccak \",Web3.utils.keccak256(\"string\"))\n// console.log(\"towei \",Web3.utils.toWei('1', 'ether'))\n// console.log(\"to ether\",Web3.utils.fromWei('1', 'ether'))\n// web3cur.eth.getHashrate(console.log)\n// web3cur.eth.getBalance(\"0x58258c78311b8ddEaD8650Ac1ab60F681FC5De43\", (err, wei) => {\n//         console.log(wei);\n//     });\n// myContract.events.MyEvent([options][, callback])\n\n// web3cur.eth.sendTransaction({\n//     from: '0xD6C23efb8c399dd7369CA490B4efAD86C8c885F3',\n//     to: '0x7BdFBE40673e500D664455a177FFe2db3aD1eeE7',\n//     value: '1000000000000000',\n//     gasPrice: '100000000000'\n// }, function(err, success) {\n//   if (!err) {\n//     console.log(\"success\")\n//   }\n// })\n// contract.methods.sendHash(\"hello\").send({},function(err, result) {\n//   console.log(\"sendHash :\",result)\n// })\n// contract.methods.getHash().call(function(err, result) {\n//   console.log(\"getHash: \",result)\n// })\n// export default contract"]},"metadata":{},"sourceType":"module"}