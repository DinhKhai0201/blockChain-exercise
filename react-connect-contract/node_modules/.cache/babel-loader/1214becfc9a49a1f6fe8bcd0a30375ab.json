{"ast":null,"code":"import web3cur from './web3';\nimport Web3 from 'web3';\nconst address = '0x22b6acd52a80540260376236d904e20b5b889246';\nconst abi = [{\n  \"constant\": false,\n  \"inputs\": [{\n    \"name\": \"x\",\n    \"type\": \"string\"\n  }],\n  \"name\": \"sendHash\",\n  \"outputs\": [],\n  \"payable\": false,\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"constant\": true,\n  \"inputs\": [],\n  \"name\": \"getHash\",\n  \"outputs\": [{\n    \"name\": \"x\",\n    \"type\": \"string\"\n  }],\n  \"payable\": false,\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}];\nconst contract = new web3cur.eth.contract(abi, address, {\n  gasPrice: 10000000000\n});\nconsole.log(web3cur.eth);\nweb3cur.eth.getAccounts(function (err, result) {\n  if (!err) {\n    console.log(\"getAccounts: \", result);\n  }\n});\nweb3cur.eth.getProtocolVersion(console.log);\nweb3cur.eth.isSyncing(console.log);\nweb3cur.eth.getCoinbase(function (err, getCoinbase) {\n  if (!err) {\n    console.log(\"getCoinbase: \", getCoinbase);\n  }\n});\nconsole.log(\"ultil\", Web3.utils.randomHex(32));\nvar BN = Web3.utils.BN;\nconsole.log(\"BN to string \", new BN(1234).toString());\nconsole.log(\"keccak \", Web3.utils.keccak256(\"string\"));\nconsole.log(\"towei \", Web3.utils.toWei('1', 'ether'));\nconsole.log(\"to ether\", Web3.utils.fromWei('1', 'ether'));\nweb3cur.eth.getHashrate(console.log);\nweb3cur.eth.getBalance(\"0x58258c78311b8ddEaD8650Ac1ab60F681FC5De43\", (err, wei) => {\n  console.log(wei);\n}); // myContract.events.MyEvent([options][, callback])\n// web3cur.eth.sendTransaction({\n//     from: '0xD6C23efb8c399dd7369CA490B4efAD86C8c885F3',\n//     to: '0x7BdFBE40673e500D664455a177FFe2db3aD1eeE7',\n//     value: '1000000000000000',\n//     gasPrice: '100000000000'\n// }, function(err, success) {\n//   if (!err) {\n//     console.log(\"success\")\n//   }\n// })\n// contract.methods.sendHash(\"hello\").call({from: '0x58258c78311b8ddEaD8650Ac1ab60F681FC5De43'},function(err, result) {\n//   console.log(\"sendhash\")\n// })\n// contract.methods.getHash().call({from: '0x58258c78311b8ddEaD8650Ac1ab60F681FC5De43'},function(err, result) {\n//   console.log(\"gethash\")\n// })\n\nexport default contract;","map":{"version":3,"sources":["/home/kai/train blockchain/ipfs/src/storehash.js"],"names":["web3cur","Web3","address","abi","contract","eth","gasPrice","console","log","getAccounts","err","result","getProtocolVersion","isSyncing","getCoinbase","utils","randomHex","BN","toString","keccak256","toWei","fromWei","getHashrate","getBalance","wei"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,QAApB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,MAAMC,OAAO,GAAG,4CAAhB;AACA,MAAMC,GAAG,GAAG,CAAC;AAAC,cAAW,KAAZ;AAAkB,YAAS,CAAC;AAAC,YAAO,GAAR;AAAY,YAAO;AAAnB,GAAD,CAA3B;AAA0D,UAAO,UAAjE;AAA4E,aAAU,EAAtF;AAAyF,aAAU,KAAnG;AAAyG,qBAAkB,YAA3H;AAAwI,UAAO;AAA/I,CAAD,EAA4J;AAAC,cAAW,IAAZ;AAAiB,YAAS,EAA1B;AAA6B,UAAO,SAApC;AAA8C,aAAU,CAAC;AAAC,YAAO,GAAR;AAAY,YAAO;AAAnB,GAAD,CAAxD;AAAuF,aAAU,KAAjG;AAAuG,qBAAkB,MAAzH;AAAgI,UAAO;AAAvI,CAA5J,CAAZ;AACA,MAAMC,QAAQ,GAAG,IAAIJ,OAAO,CAACK,GAAR,CAAYD,QAAhB,CAAyBD,GAAzB,EAA8BD,OAA9B,EAAsC;AAAEI,EAAAA,QAAQ,EAAE;AAAZ,CAAtC,CAAjB;AACAC,OAAO,CAACC,GAAR,CAAYR,OAAO,CAACK,GAApB;AACAL,OAAO,CAACK,GAAR,CAAYI,WAAZ,CAAwB,UAASC,GAAT,EAAcC,MAAd,EAAsB;AAC5C,MAAI,CAACD,GAAL,EAAU;AACRH,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BG,MAA5B;AACD;AACF,CAJD;AAKAX,OAAO,CAACK,GAAR,CAAYO,kBAAZ,CAA+BL,OAAO,CAACC,GAAvC;AACAR,OAAO,CAACK,GAAR,CAAYQ,SAAZ,CAAsBN,OAAO,CAACC,GAA9B;AACAR,OAAO,CAACK,GAAR,CAAYS,WAAZ,CAAwB,UAASJ,GAAT,EAAcI,WAAd,EAA2B;AACjD,MAAI,CAACJ,GAAL,EAAU;AACRH,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BM,WAA5B;AACD;AACF,CAJD;AAKAP,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBP,IAAI,CAACc,KAAL,CAAWC,SAAX,CAAqB,EAArB,CAArB;AACA,IAAIC,EAAE,GAAGhB,IAAI,CAACc,KAAL,CAAWE,EAApB;AACAV,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4B,IAAIS,EAAJ,CAAO,IAAP,EAAaC,QAAb,EAA5B;AACAX,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBP,IAAI,CAACc,KAAL,CAAWI,SAAX,CAAqB,QAArB,CAAtB;AACAZ,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBP,IAAI,CAACc,KAAL,CAAWK,KAAX,CAAiB,GAAjB,EAAsB,OAAtB,CAArB;AACAb,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBP,IAAI,CAACc,KAAL,CAAWM,OAAX,CAAmB,GAAnB,EAAwB,OAAxB,CAAvB;AACArB,OAAO,CAACK,GAAR,CAAYiB,WAAZ,CAAwBf,OAAO,CAACC,GAAhC;AACAR,OAAO,CAACK,GAAR,CAAYkB,UAAZ,CAAuB,4CAAvB,EAAqE,CAACb,GAAD,EAAMc,GAAN,KAAc;AAC3EjB,EAAAA,OAAO,CAACC,GAAR,CAAYgB,GAAZ;AACH,CAFL,E,CAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAepB,QAAf","sourcesContent":["import web3cur from './web3';\nimport Web3 from 'web3';\nconst address = '0x22b6acd52a80540260376236d904e20b5b889246';\nconst abi = [{\"constant\":false,\"inputs\":[{\"name\":\"x\",\"type\":\"string\"}],\"name\":\"sendHash\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getHash\",\"outputs\":[{\"name\":\"x\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]\nconst contract = new web3cur.eth.contract(abi, address,{ gasPrice: 10000000000 });\nconsole.log(web3cur.eth)\nweb3cur.eth.getAccounts(function(err, result) {\n  if (!err) {\n    console.log(\"getAccounts: \",result)\n  } \n});\nweb3cur.eth.getProtocolVersion(console.log)\nweb3cur.eth.isSyncing(console.log)\nweb3cur.eth.getCoinbase(function(err, getCoinbase) {\n  if (!err) {\n    console.log(\"getCoinbase: \",getCoinbase)\n  }\n})\nconsole.log(\"ultil\", Web3.utils.randomHex(32))\nvar BN = Web3.utils.BN;\nconsole.log(\"BN to string \",new BN(1234).toString())\nconsole.log(\"keccak \",Web3.utils.keccak256(\"string\"))\nconsole.log(\"towei \",Web3.utils.toWei('1', 'ether'))\nconsole.log(\"to ether\",Web3.utils.fromWei('1', 'ether'))\nweb3cur.eth.getHashrate(console.log)\nweb3cur.eth.getBalance(\"0x58258c78311b8ddEaD8650Ac1ab60F681FC5De43\", (err, wei) => {\n        console.log(wei);\n    });\n// myContract.events.MyEvent([options][, callback])\n\n// web3cur.eth.sendTransaction({\n//     from: '0xD6C23efb8c399dd7369CA490B4efAD86C8c885F3',\n//     to: '0x7BdFBE40673e500D664455a177FFe2db3aD1eeE7',\n//     value: '1000000000000000',\n//     gasPrice: '100000000000'\n// }, function(err, success) {\n//   if (!err) {\n//     console.log(\"success\")\n//   }\n// })\n// contract.methods.sendHash(\"hello\").call({from: '0x58258c78311b8ddEaD8650Ac1ab60F681FC5De43'},function(err, result) {\n//   console.log(\"sendhash\")\n// })\n// contract.methods.getHash().call({from: '0x58258c78311b8ddEaD8650Ac1ab60F681FC5De43'},function(err, result) {\n//   console.log(\"gethash\")\n// })\nexport default contract"]},"metadata":{},"sourceType":"module"}