{"ast":null,"code":"//imports the Web3 API\nimport Web3 from 'web3';\n/**\n * creates & exports new instance for \n * Web3 using provided service by Metamask.\n */\n\nconst rpcURL = \"https://ropsten.infura.io/v3/cf658270146645bca881f8a7d4752099\"; // Your RCP URL goes here\n\nvar web3;\nwindow.addEventListener('load', async () => {\n  if (web3) {\n    var instance = new Web3(window.ethereum);\n\n    try {\n      // Request account access if needed\n      await window.ethereum.enable(); // Acccounts now exposed\n\n      web3 = instance;\n      console.log(\"enable\");\n    } catch (error) {\n      // User denied account access...\n      alert('Please allow access for the app to work');\n    }\n  } else if (window.web3) {\n    web3 = new Web3(web3.currentProvider);\n    console.log(\"Metamask\"); // Acccounts always exposed\n  } else {\n    console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n  }\n});\nconsole.log(web3.currentProvider);\nconsole.log(window.ethereum);\nexport default web3;","map":{"version":3,"sources":["/home/kai/train blockchain/ipfs/src/web3.js"],"names":["Web3","rpcURL","web3","window","addEventListener","instance","ethereum","enable","console","log","error","alert","currentProvider"],"mappings":"AAAA;AACA,OAAOA,IAAP,MAAiB,MAAjB;AAEA;;;;;AAKA,MAAMC,MAAM,GAAG,+DAAf,C,CAA+E;;AAE/E,IAAIC,IAAJ;AACAC,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgC,YAAY;AACxC,MAAIF,IAAJ,EAAU;AACN,QAAIG,QAAQ,GAAG,IAAIL,IAAJ,CAASG,MAAM,CAACG,QAAhB,CAAf;;AACA,QAAI;AACA;AACA,YAAMH,MAAM,CAACG,QAAP,CAAgBC,MAAhB,EAAN,CAFA,CAGA;;AACAL,MAAAA,IAAI,GAAGG,QAAP;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACH,KAND,CAME,OAAOC,KAAP,EAAc;AACZ;AACAC,MAAAA,KAAK,CAAC,yCAAD,CAAL;AACH;AACJ,GAZD,MAYO,IAAIR,MAAM,CAACD,IAAX,EAAiB;AACpBA,IAAAA,IAAI,GAAG,IAAIF,IAAJ,CAASE,IAAI,CAACU,eAAd,CAAP;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAFoB,CAGpB;AACH,GAJM,MAKF;AACDD,IAAAA,OAAO,CAACC,GAAR,CAAY,qEAAZ;AACH;AACJ,CArBD;AAsBAD,OAAO,CAACC,GAAR,CAAYP,IAAI,CAACU,eAAjB;AACAJ,OAAO,CAACC,GAAR,CAAYN,MAAM,CAACG,QAAnB;AACA,eAAeJ,IAAf","sourcesContent":["//imports the Web3 API\nimport Web3 from 'web3';\n\n/**\n * creates & exports new instance for \n * Web3 using provided service by Metamask.\n */\n\nconst rpcURL = \"https://ropsten.infura.io/v3/cf658270146645bca881f8a7d4752099\" // Your RCP URL goes here\n\nvar web3;\nwindow.addEventListener('load', async () => {\n    if (web3) {\n        var instance = new Web3(window.ethereum);\n        try {\n            // Request account access if needed\n            await window.ethereum.enable();\n            // Acccounts now exposed\n            web3 = instance;\n            console.log(\"enable\");\n        } catch (error) {\n            // User denied account access...\n            alert('Please allow access for the app to work');\n        }\n    } else if (window.web3) {\n        web3 = new Web3(web3.currentProvider);\n        console.log(\"Metamask\");\n        // Acccounts always exposed\n    }\n    else {\n        console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n    }\n});\nconsole.log(web3.currentProvider);\nconsole.log(window.ethereum);\nexport default web3;"]},"metadata":{},"sourceType":"module"}